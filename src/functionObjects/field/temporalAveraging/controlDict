/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

  application       XXX;

  libs              ( XXX );

  startFrom         startTime;

  startTime         0.0;

  stopAt            endTime;

  endTime           10.0;

  deltaT            0.5;

  writeControl      adjustableRunTime;

  writeInterval     1.0; 

  purgeWrite        0;

  writeFormat       binary;

  writePrecision    12;

  writeCompression  compressed;

  timeFormat        general;

  timePrecision     12;

  runTimeModifiable yes;

  adjustTimeStep    yes;

  maxCo             0.75;

  maxDeltaT         25.0;

  functions
  {
      // This is an example of two temporal averaging functions simultaneously.
      // The first is a simple time average with no windowing
      timeAverage
      {
          //Type of functionObject
          type                 temporalAveraging;
      
          // Where to load it from
          functionObjectLibs   ("libSOWFAfieldFunctionObjects.so");
      
          // Function object enabled flag
          enabled              true;
      
          // Write to a log file
          log                  true;

          //Restart control.
          restartOnRestart    false;
          restartOnOutput     false;
          periodicRestart     false;
          restartPeriod       100.0;
      
          // When to output the average fields
          writeControl        timeStep;
          writeInterval       10.0; 
      
          // When to start time averaging.
          timeStart   0.0;
          timeEnd     1000.0;
      
          // Overall control of averaging operation.
          executeControl     timeStep;
          executeInterval    1;

          //Fields to be averaged - runTime modifiable
          fields
          (
              U
              {
                  averageName    "timeAverage";
                  mean            on;
                  prime2Mean      on;
                  primeUPrimeMean off;
                  base            time;
                  windowType      exact;
                  window          10.0;
                  windowName      <name>;
              }

              T
              {
                  averageName    "timeAverage";
                  mean            on;
                  prime2Mean      on;
                  primeUPrimeMean on;
                  base            time;
              }

              p_rgh
              {
                  averageName    "timeAverage";
                  mean            on;
                  prime2Mean      on;
                  primeUPrimeMean off;
                  base            time;
              }
          );
      }


      // --The second is a periodic (phase average) every N time steps.
      phaseAverage
      {
          //Type of functionObject
          type                 temporalAveraging;
      
          // Where to load it from
          functionObjectLibs   ("libSOWFAfieldFunctionObjects.so");
      
          // Function object enabled flag
          enabled              true;
      
          // Write to a log file
          log                  true;

          //Restart control.
          restartOnRestart    false;
          restartOnOutput     false;
          periodicRestart     false;
          restartPeriod       100.0;
      
          // When to output the average fields
          writeControl        timeStep;
          writeInterval       10.0; 
      
          // When to start time averaging.
          timeStart   0.0;
          timeEnd     1000.0;
      
          // Overall control of averaging operation.
          executeControl     timeStep;
          executeInterval    20;

          //Fields to be averaged - runTime modifiable
          fields
          (
              U
              {
                  averageName    "phaseAverage";
                  mean            on;
                  prime2Mean      on;
                  primeUPrimeMean off;
                  base            iteration;
              }

              T
              {
                  averageName    "phaseAverage";
                  mean            on;
                  prime2Mean      on;
                  primeUPrimeMean on;
                  base            iteration;
              }

              p_rgh
              {
                  averageName    "phaseAverage";
                  mean            on;
                  prime2Mean      on;
                  primeUPrimeMean off;
                  base            iteration;
              }
          );
      }
  }

// ************************************************************************* //

